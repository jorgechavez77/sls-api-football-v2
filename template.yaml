AWSTemplateFormatVersion: 2010-09-09
Description: sls-api-football-v2
Transform:
  - AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: nodejs22.x
    Timeout: 29
    MemorySize: 128
    Architectures:
      - x86_64
    Environment:
      Variables:
        MONGODB_URI: '{{resolve:secretsmanager:/dev/football-api/credentials:SecretString:MONGODB_URI}}'
    LoggingConfig:
      LogFormat: JSON

Resources:
  FootballApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Auth:
        UsagePlan:
          CreateUsagePlan: SHARED
          UsagePlanName: dev-usage-plan
      EndpointConfiguration:
        Type: REGIONAL

  GetTournamentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dev-api-football-v2-get-tournament
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/lambda-role-v1
      Handler: src/football/handler.getTournament
      Events:
        Api:
          Type: Api
          Properties:
            Path: /tournaments/{id}
            Method: GET
            RestApiId: !Ref FootballApi
            Auth:
              ApiKeyRequired: true
    Metadata:
      BuildSpec: buildspec.yml

  TournamentFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${TournamentFunction}
      RetentionInDays: 7

  GetTeamFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dev-api-football-v2-get-team
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/lambda-role-v1
      Handler: src/football/handler.getTeam
      Events:
        Api:
          Type: Api
          Properties:
            Path: /teams/{id}
            Method: GET
            RestApiId: !Ref FootballApi
            Auth:
              ApiKeyRequired: true
    Metadata:
      BuildSpec: buildspec.yml

  GetTeamFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${GetTeamFunction}
      RetentionInDays: 7

  CreateTeamFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dev-api-football-v2-create-team
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/lambda-role-v1
      Handler: src/football/handler.createTeam
      Events:
        Api:
          Type: Api
          Properties:
            Path: /teams
            Method: POST
            RestApiId: !Ref FootballApi
            Auth:
              ApiKeyRequired: true
    Metadata:
      BuildSpec: buildspec.yml

  CreateTeamFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CreateTeamFunction}
      RetentionInDays: 7
